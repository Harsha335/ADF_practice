{
	"name": "practice",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "DS_input_files",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "input data",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "input_files",
					"value": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					}
				}
			},
			{
				"name": "iterate files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "input data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('input_files')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(indexOf(item().name, 'customerdetails'), -1)",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"input_files": {
				"type": "Array"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-08-27T07:46:02Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}